#!/bin/sh

config="/system/conf/dnsmasq.conf";
curdir=$(cd $(dirname $0) && pwd)
hdnsconf="conf-dir=$curdir/conf";

usage() {
    echo "ERROR: action missing"
    echo "syntax: $0 <start|stop|restart|status|config|install|uninstall>"
    echo "example: $0 start"
}

delConfDir() {
    /system/sbin/writesys.sh
    /bin/sed -ie "/conf-dir/d" $config 1>/dev/null 2>&1
    /system/sbin/writesys.sh close
}

addConfDir() {
    /system/sbin/writesys.sh
    /bin/sed -ie "/conf-dir/d" $config 1>/dev/null 2>&1
    echo $hdnsconf >> $config
    /system/sbin/writesys.sh close
}

dnsStop() {
    pid=`/bin/ps|grep dnsmasq|grep -v grep|awk '{print $1}'`
    if [ "$pid" != "" ]; then
        /bin/kill $pid
    else
        /usr/bin/killall dnsmasq
    fi
}

dnsStart() {
    dnsStop
    /bin/dnsmasq -C "$config" &
}

hdnsEnable() {
    addConfDir
    dnsStart
}

hdnsDisable() {
    delConfDir
    dnsStart
}

hdnsStatus() {
    conf=`/bin/grep "conf-dir" $config`
    echo $conf
}

hdnsConfig() {
    ## TBD, need to handle the re-config data from plugin internal logic.
    ## for hdns, need to move the conf file into ./conf folder, and maybe want
    ## to restart DNS service
    dnsStart
}

install(){
    ## init tp_apps.conf dir
}

# main
if [ $# -lt 1 ]; then
    usage
    exit -1
fi

case "$1" in
    "start" | "restart" )
        hdnsEnable ;;
    "stop" )
        hdnsDisable ;;
    "status" )
        hdnsStatus ;;
    "config" )
        hdnsConfig ;;
    "install" )
        install ;;
    "uninstall" )
        hdnsDisable 
        echo "uninstall" ;;
    * )
        usage ;;
esac
